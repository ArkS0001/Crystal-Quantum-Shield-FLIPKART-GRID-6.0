# # nginx.conf

# # Number of worker processes (auto sets it to the number of available CPU cores)
# worker_processes auto;

# events {
#     # Maximum number of simultaneous connections per worker
#     worker_connections 4096;
# }

# http {
#     # Define a rate limiting zone
#     # This setting limits requests to 100 requests per second from each IP
#     limit_req_zone $binary_remote_addr zone=mylimit:10m rate=100r/s;

#     # Logging
#     access_log logs/access.log;
#     error_log logs/error.log;

#     # Upstream definition for load balancing (optional, in case of multiple Flask instances)
#     upstream flask_app {
#         server 127.0.0.1:8000;  # First Flask instance
#         # Uncomment and add more servers if needed for load balancing
#         # server 127.0.0.1:8001;  # Second Flask instance
#         # server 127.0.0.1:8002;  # Third Flask instance
#     }

#     server {
#         listen 80;
#         server_name localhost;

#         # Root location - all requests to this server will be processed here
#         location / {
#             # Apply the rate limiting rule defined above
#             limit_req zone=mylimit burst=50 nodelay;

#             # Proxy the request to the Flask application running on port 8000
#             proxy_pass http://flask_app;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # Increase timeouts to prevent premature 503 errors
#             proxy_read_timeout 300;
#             proxy_connect_timeout 300;
#             proxy_send_timeout 300;

#             # Buffering settings (optional, for larger responses)
#             proxy_buffering on;
#             proxy_buffers 16 16k;
#             proxy_buffer_size 32k;
#         }

#         # Optional: serve static files
#         location /static/ {
#             alias C:/path/to/your/static/files/;
#         }
#     }

#     # Global settings
#     keepalive_timeout 65;
#     sendfile on;
#     tcp_nopush on;
#     tcp_nodelay on;
#     gzip on;
# }

##--------------------------------------------------------------------------------------------------------------------------------------------
# Number of worker processes (auto sets it to the number of available CPU cores)
# worker_processes 2;

# events {
#     # Maximum number of simultaneous connections per worker
#     worker_connections 4096;
# }

# http {
#     # Define rate limiting zones for different layers
#     limit_req_zone $binary_remote_addr zone=zone1:10m rate=100r/s;
#     limit_req_zone $binary_remote_addr zone=zone2:10m rate=50r/s;
#     limit_req_zone $binary_remote_addr zone=zone3:10m rate=25r/s;

#     # Logging
#     access_log logs/access.log;
#     error_log logs/error.log;

#     # Upstream definition for load balancing (optional, in case of multiple Flask instances)
#     upstream flask_app {
#         server 127.0.0.1:8000;  # First Flask instance
#         # Uncomment and add more servers if needed for load balancing
#         # server 127.0.0.1:8001;  # Second Flask instance
#         # server 127.0.0.1:8002;  # Third Flask instance
#     }

#     server {
#         listen 80;
#         server_name localhost;

#         # First layer of proxying
#         location /layer1/ {
#             limit_req zone=zone1 burst=20 nodelay;

#             # Pass the request to the second layer
#             proxy_pass http://localhost/layer2/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             proxy_read_timeout 300;
#             proxy_connect_timeout 300;
#             proxy_send_timeout 300;

#             proxy_buffering on;
#             proxy_buffers 16 16k;
#             proxy_buffer_size 32k;
#         }

#         # Second layer of proxying
#         location /layer2/ {
#             limit_req zone=zone2 burst=15 nodelay;

#             # Pass the request to the third layer
#             proxy_pass http://localhost/layer3/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             proxy_read_timeout 300;
#             proxy_connect_timeout 300;
#             proxy_send_timeout 300;

#             proxy_buffering on;
#             proxy_buffers 16 16k;
#             proxy_buffer_size 32k;
#         }

#         # Third layer of proxying
#         location /layer3/ {
#             limit_req zone=zone3 burst=10 nodelay;

#             # Final pass to the Flask application
#             proxy_pass http://flask_app;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             proxy_read_timeout 300;
#             proxy_connect_timeout 300;
#             proxy_send_timeout 300;

#             proxy_buffering on;
#             proxy_buffers 16 16k;
#             proxy_buffer_size 32k;
#         }

#         # Root location - serve static files or other resources
#         location / {
#             root /var/www/html;
#             index index.html;
#         }

#         # Serve static files
#         location /static/ {
#             alias C:/path/to/your/static/files/;
#         }
#     }

#     # Global settings
#     keepalive_timeout 65;
#     sendfile on;
#     tcp_nopush on;
#     tcp_nodelay on;
#     gzip on;
# }
#----------------------------------------------------------------------------------------------------------------------------------


# Number of worker processes (auto sets it to the number of available CPU cores)
worker_processes auto;

events {
    # Maximum number of simultaneous connections per worker
    worker_connections 4096;
}

http {
    # Define rate limiting zones for different layers
    limit_req_zone $binary_remote_addr zone=zone1:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=zone2:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=zone3:10m rate=25r/s;

    # Logging
    access_log logs/access.log;
    error_log logs/error.log;

    # Upstream definition for load balancing (optional, in case of multiple Flask instances)
    upstream flask_app {
        server 127.0.0.1:8000;  # First Flask instance
        # Uncomment and add more servers if needed for load balancing
        # server 127.0.0.1:8001;  # Second Flask instance
        # server 127.0.0.1:8002;  # Third Flask instance
    }

    server {
        listen 80;
        server_name localhost;

        # First layer of proxying
        location / {
            limit_req zone=zone1 burst=20 nodelay;

            # Pass the request to the second layer
            proxy_pass http://localhost/layer2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;

            proxy_buffering on;
            proxy_buffers 16 16k;
            proxy_buffer_size 32k;
        }

        # Second layer of proxying
        location /layer2/ {
            limit_req zone=zone2 burst=15 nodelay;

            # Pass the request to the third layer
            proxy_pass http://localhost/layer3/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;

            proxy_buffering on;
            proxy_buffers 16 16k;
            proxy_buffer_size 32k;
        }

        # Third layer of proxying
        location /layer3/ {
            limit_req zone=zone3 burst=10 nodelay;

            # Final pass to the Flask application
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;

            proxy_buffering on;
            proxy_buffers 16 16k;
            proxy_buffer_size 32k;
        }

        # Serve static files
        location /static/ {
            alias C:/path/to/your/static/files/;
        }
    }

    # Global settings
    keepalive_timeout 65;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
}
